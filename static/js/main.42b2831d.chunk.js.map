{"version":3,"sources":["components/layout/Sidebar.jsx","components/layout/Navbar.jsx","components/Forecast/BeachInfo.jsx","components/Forecast/Forecast.jsx","App.js","serviceWorker.js","index.js"],"names":["Sidebar","_","react_default","a","createElement","id","className","style","textAlign","color","fontFamily","fontSize","backgroundColor","Link","to","Nav","styled","div","_templateObject","Navbar","onToggleClick","sideBar","document","querySelector","classList","toggle","windowWidth","window","innerWidth","title","contains","add","remove","addEventListener","type","onClick","this","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","data-fa-i2svg","width","fill","d","props","spotName","Spinner","animation","Component","BeachInfo","_ref","Pico","src","alt","index_esm","Nome_Praia","Nome_Pico","gi_index_esm","Desc_Nivel","Altura_Min_Onda","Altura_Max_Onda","Nota_Qualidade_Surf","ai_index_esm","class","Content","Forecast_templateObject","Forecast","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","preencherCard","pico","console","log","setState","value","opcaoSelecionada","state","Picos","_this2","axios","get","then","res","data","catch","err","fetchData","prevProps","_this$state","htmlFor","react_select_browser_esm","onChange","options","map","index","label","Data","Forecast_BeachInfo","App_templateObject","App","Spot_Name","Beach_Name","Fragment","BrowserRouter","layout_Sidebar","App_Content","layout_Navbar","Switch","components_Forecast_Forecast","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4PAiCeA,EA9BC,SAAAC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUC,UAAU,WAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBC,MAAO,CAAEC,UAAW,YAIpDN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BACZJ,EAAAC,EAAAC,cAAA,KACEG,MAAO,CACLE,MAAO,UACPC,WAAY,qBACZC,SAAU,QACVC,gBAAiB,uBALrB,kBAUAV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,KAAT,yxBCrBV,IAAMC,EAAMC,IAAOC,IAAVC,KA2GMC,6MAtDbC,cAAgB,WACd,IAAMC,EAAUC,SAASC,cAAc,YACvCF,EAAQG,UAAUC,OAAO,UACzB,IAAMC,EAAcC,OAAOC,WACrBC,EAAQP,SAASC,cAAc,UACjCG,EAAc,MACZL,EAAQG,UAAUM,SAAS,UAC7BD,EAAML,UAAUO,IAAI,UAEpBF,EAAML,UAAUQ,OAAO,+FAtB3B,IAAMX,EAAUC,SAASC,cAAc,YACjCG,EAAcC,OAAOC,WACrBC,EAAQP,SAASC,cAAc,UACrCI,OAAOM,iBAAiB,SAAU,WAC5BP,EAAc,MACZL,EAAQG,UAAUM,SAAS,UAC7BD,EAAML,UAAUO,IAAI,UAEpBF,EAAML,UAAUQ,OAAO,8CAoB7B,OACE9B,EAAAC,EAAAC,cAACW,EAAD,CAAKT,UAAU,wCACbJ,EAAAC,EAAAC,cAAA,UACE8B,KAAK,SACL7B,GAAG,kBACHC,UAAU,eACV6B,QAASC,KAAKhB,eAEdlB,EAAAC,EAAAC,cAAA,OACEE,UAAU,6CACV+B,cAAY,OACZC,cAAY,MACZC,YAAU,cACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,cACRC,gBAAc,GACdC,MAAM,OAEN1C,EAAAC,EAAAC,cAAA,QACEyC,KAAK,eACLC,EAAE,mdAGN5C,EAAAC,EAAAC,cAAA,2CAGFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,IACbJ,EAAAC,EAAAC,cAAA,MAAIC,GAAG,QAAQC,UAAU,QACtB8B,KAAKW,MAAMC,UAEd9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAASC,UAAU,kBA7DRC,8ECVNC,EAxBG,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEnB,OACEpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeiD,IAAK,0EAA2EC,IAAI,KAChHtD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAd,6BAEAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAGbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAACqD,EAAA,EAAD,MAArB,IAAgCvD,EAAAC,EAAAC,cAAA,2BAA2BkD,EAAKI,YAChExD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,IAA6BJ,EAAAC,EAAAC,cAACqD,EAAA,EAAD,MAA7B,IAAiDvD,EAAAC,EAAAC,cAAA,yBAAjD,IAA2EkD,EAAKK,WAChFzD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,KAA8BJ,EAAAC,EAAAC,cAACwD,EAAA,EAAD,MAA9B,KAA6C1D,EAAAC,EAAAC,cAAA,yBAA7C,IAAuEkD,EAAKO,YAC5E3D,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,IAA6BJ,EAAAC,EAAAC,cAACwD,EAAA,EAAD,MAA7B,IAA8C1D,EAAAC,EAAAC,cAAA,gCAA9C,OAAkFkD,EAAKQ,gBAAvF,MAA2GR,EAAKS,iBAChH7D,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAcJ,EAAAC,EAAAC,cAACwD,EAAA,EAAD,MAA5B,IAA4C1D,EAAAC,EAAAC,cAAA,+BAA+BkD,EAAKU,oBAAoB9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,OACpG/D,EAAAC,EAAAC,cAAA,UAAQ8B,KAAK,SAASgC,MAAM,mBAA5B,u7BCjBV,IAAMC,EAAUnD,IAAOC,IAAVmD,KAyIEC,cA1Fb,SAAAA,EAAYtB,GAAO,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAiC,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnC,KAAAmC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAvC,KAAMW,KAaN6B,cAAgB,SAAAC,GACdC,QAAQC,IAAIF,GACZP,EAAKU,SAAS,CAEZ1B,KAAMuB,EAAKI,MACXC,iBAAkBL,KAjBtBP,EAAKa,MAAQ,CAEXC,MAAO,GACPF,iBAAkB,GAClB5B,KAAM,IANSgB,2EAuBL,IAAAe,EAAAjD,KAGZkD,IACGC,IACC,8CAEDC,KAAK,SAAAC,GAIJJ,EAAKL,SAAS,CAEZI,MAAOK,EAAIC,SAGdC,MAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,iDAI5BxD,KAAKyD,uDAKYC,GAEf1D,KAAKyD,6CAEA,IAAAE,EAMH3D,KAAK+C,MAHPC,EAHKW,EAGLX,MACA9B,EAJKyC,EAILzC,KACA4B,EALKa,EAKLb,iBAEF,OACEhF,EAAAC,EAAAC,cAAC+D,EAAD,CAAS7D,UAAU,aACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACfJ,EAAAC,EAAAC,cAAA,SAAO4F,QAAQ,6BAA4B9F,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAASiB,MAAM,IAAIhB,UAAU,SAAxE,IAAmF,MAAnF,oBACEhD,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAEEC,SAAU9D,KAAKwC,cACfK,MAAOC,EACPiB,QAASf,EAAMgB,IAAI,SAACvB,EAAKwB,GAEzB,MACD,CAACpB,MAAOJ,EAAMyB,MAAQzB,EAAK0B,KAAO,MAAQ1B,EAAKnB,WAAa,MAAQmB,EAAKlB,iBAQ9EzD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoG,EAAD,CACIlD,KAAMA,cAnFGH,mUC5CvB,IAAMgB,EAAUnD,IAAOC,IAAVwF,KA4CEC,cA9Bb,SAAAA,EAAY3D,GAAO,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAsE,IACnBpC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnC,KAAAmC,OAAAG,EAAA,EAAAH,CAAAmC,GAAA/B,KAAAvC,KAAMW,KACDoC,MAAQ,CACXwB,UAAW,YACXC,WAAY,oBAJKtC,wEAUjB,OACEpE,EAAAC,EAAAC,cAACF,EAAAC,EAAM0G,SAAP,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAC2G,EAAD,MACA7G,EAAAC,EAAAC,cAAC4G,EAAD,KAEE9G,EAAAC,EAAAC,cAAC6G,EAAD,CAAQN,UAAWvE,KAAK+C,MAAMwB,YAClBzG,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACNhH,EAAAC,EAAAC,cAAC+G,EAAD,kBArBFhE,aCVEiE,QACW,cAA7BzF,OAAO0F,SAASC,UAEe,UAA7B3F,OAAO0F,SAASC,UAEhB3F,OAAO0F,SAASC,SAASC,MACvB,uECXNC,IAASC,OAAOvH,EAAAC,EAAAC,cAACsH,EAAD,MAASpG,SAASqG,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,KAAK,SAAAuC,GACjCA,EAAaC","file":"static/js/main.42b2831d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Sidebar = _ => {\n  return (\n    <nav id=\"sidebar\" className=\"bg-dark\">\n      <div className=\"sidebar-header\" style={{ textAlign: 'center' }}>\n\n      </div>\n\n      <ul className=\"list-unstyled components\">\n        <p\n          style={{\n            color: '#2fbc1a',\n            fontFamily: 'Shadows Into Light',\n            fontSize: '1.7em',\n            backgroundColor: 'rgba(0, 0, 0, 0.7)'\n          }}\n        >\n          Pico Certo PWA\n        </p>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/\">About</Link>\n        </li>\n      </ul>\n\n    </nav>\n  );\n};\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst Nav = styled.div`\n  padding: 15px 10px;\n  border-radius: 10px;\n  margin-bottom: 40px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #353535;\n  h1 {\n    flex: 5;\n    justify-self: center;\n    color: #999;\n    font-size: 2.5em;\n    position: relative;\n    text-align: right;\n    padding-right: 2em;\n    font-family: 'Shadows Into Light', 'cursive';\n  }\n  div {\n    flex: 3;\n  }\n  #sidebarCollapse {\n    background: #2fbc1a;\n    border: none;\n    margin-left: 1em;\n  }\n  @media (max-width: 600px) {\n    h1 {\n      font-size: 1.5em;\n    }\n    div {\n      width: 100%;\n      flex: 2;\n    }\n  }\n`;\n\nclass Navbar extends Component {\n  componentDidMount() {\n    const sideBar = document.querySelector('#sidebar');\n    const windowWidth = window.innerWidth;\n    const title = document.querySelector('#title');\n    window.addEventListener('resize', () => {\n      if (windowWidth < 770) {\n        if (sideBar.classList.contains('active')) {\n          title.classList.add('active');\n        } else {\n          title.classList.remove('active');\n        }\n      }\n    });\n  }\n  onToggleClick = () => {\n    const sideBar = document.querySelector('#sidebar');\n    sideBar.classList.toggle('active');\n    const windowWidth = window.innerWidth;\n    const title = document.querySelector('#title');\n    if (windowWidth < 770) {\n      if (sideBar.classList.contains('active')) {\n        title.classList.add('active');\n      } else {\n        title.classList.remove('active');\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Nav className=\"Navbar navbar-expand-lg navbar-light\">\n        <button\n          type=\"button\"\n          id=\"sidebarCollapse\"\n          className=\"btn btn-info\"\n          onClick={this.onToggleClick}\n        >\n          <svg\n            className=\"svg-inline--fa fa-align-right fa-w-14 mr-1\"\n            aria-hidden=\"true\"\n            data-prefix=\"fas\"\n            data-icon=\"align-right\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 448 512\"\n            data-fa-i2svg=\"\"\n            width=\"1em\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M160 84V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H176c-8.837 0-16-7.163-16-16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n            />\n          </svg>\n          <span>Mais servi√ßos PicoCerto</span>\n          \n        </button>\n        <div className=\"\">\n          <h1 id=\"title\" className=\"ml-5\">\n            {this.props.spotName}\n          </h1>\n          <Spinner animation=\"grow\" />\n        </div>\n        \n      </Nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { FaWater, FaUmbrellaBeach } from 'react-icons/fa';\nimport { GiWaveSurfer, GiSurfBoard, Gi3DStairs} from 'react-icons/gi';\nimport { AiOutlineStar } from 'react-icons/ai';\n\n\n\n\nconst BeachInfo = ({ Pico }) => {\n  \n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n      \n      <img className=\"card-img-top\" src={'https://drive.google.com/thumbnail?id=15kR792QwoZJm6U06mtK20oS0Db63a3rU'} alt=\"\"></img>\n        <h4 className=\"card-title\">Previs√µes da PicoCerto</h4> \n        \n        <div className=\"flex justify-content\">\n        \n        \n          <h6 className=\"text\"><FaWater/> <strong> Praia : </strong>{Pico.Nome_Praia}</h6>\n          <h6 className=\"text-inline\"> <FaUmbrellaBeach /> <strong>Pico : </strong> {Pico.Nome_Pico}</h6>\n          <h6 className=\"text-inline\">  <Gi3DStairs/>  <strong>Nivel :</strong> {Pico.Desc_Nivel}</h6>\n          <h6 className=\"text-inline\"> <GiWaveSurfer /> <strong>Altura (ft) : </strong> De {Pico.Altura_Min_Onda} a {Pico.Altura_Max_Onda}</h6>\n          <h6 className=\"text-inline\"><GiSurfBoard /> <strong> Qualidade : </strong>{Pico.Nota_Qualidade_Surf}<AiOutlineStar/></h6>\n          <button type=\"button\" class=\"btn btn-success\">Clique aqui para agendar sua trip!</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BeachInfo;\n\n","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport BeachInfo from './BeachInfo';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nconst Content = styled.div`\nwidth: 100%; // make sure the parent is full screen \nheight: 100%; // so that the content will center correctly\n  height: auto;\n  margin: 0;\n  .card {\n    display: flex;\n\njustify-content: center;\nwidth: 100%; // make sure the parent is full screen \nheight: 100%; // so that the content will center correctly\n  \n    \n    box-shadow: 1 1 5px 0 #000;\n    padding: 10px;\n    \n    justify-content: space-between;\n    position: center;\n    margin-left: auto;\n    margin-right: auto;\n    \n  }\n  .charts {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n  @media (max-width: 1010px) {\n    .charts {\n      flex-direction: row;\n    }\n    .charts > * {\n      width: 100%;\n    }\n  }\n\n  label {\n    font-size: 1.5em;\n    color: #2fbc1a;\n    .\n  }\n  .a{\n    size: 5px;\n  }\n`;\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //Dados sobre o pico (dummy data)\n      Picos: [],\n      opcaoSelecionada: \"\",\n      Pico: [],\n\n    };\n  }\n\n  // fetchData() {\n  // Quando o usu√°rio selecionar um pico no campo select, os dados desse pico devem ser passados para \n  // o card de previs√£o, famoso atualizar o status do componente.\n    preencherCard = pico => {\n      console.log(pico)\n      this.setState({\n        //Criando uma cariavel para receber todo o Json,\n        Pico: pico.value,\n        opcaoSelecionada: pico\n      });\n      }\n    \n    fetchData() {\n    //Numero Fixo. Ao Renderizar o componente esse n√∫mero deve ser recebido\n    //Ex: fetchData(ID_Prev_OPC)\n    axios\n      .get(\n        'http://demo6039565.mockable.io/PrevisaoOPC'\n      )\n      .then(res => {\n        // console.log(res.data);\n        //Provavelmente √© necess√°rio fazer um map para percorrer todo o json e preencher uma lista \n        //Ou talvez, apenas salvar uma variavel DATA = res.data\n        this.setState({\n          //Criando uma cariavel para receber todo o Json\n          Picos: res.data\n        });\n      })\n      .catch(err => console.log(err));\n\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  \n  //change spot\n  componentDidUpdate(prevProps) {\n\n      this.fetchData();\n  }\n  render() {\n    const {\n      //Passando a variavel com  todo json\n      Picos,\n      Pico,\n      opcaoSelecionada\n    } = this.state;\n    return (\n      <Content className=\"container\">\n        <div className=\"row mb-3\">\n          <div className=\"form-group col-lg-4 col-sm-10 mt-3\">\n          <label htmlFor=\"exampleFormControlSelect1\"><Spinner class=\"a\" animation=\"grow\" /> {\"   \"}Selecione o pico</label>\n            <Select\n              //Quando clicar na op√ß√£o √© necess√°rio fazer o fetch novamente, pelo indice da op√ß√£o que foi clicada\n              onChange={this.preencherCard}\n              value={opcaoSelecionada}\n              options={Picos.map((pico,index) => {\n                \n              return (\n             {value: pico, label:  pico.Data + \" - \" + pico.Nome_Praia + \" - \" + pico.Nome_Pico}\n               )\n             })}\n            >\n          </Select>\n          \n          </div>\n        </div>\n        <div className=\"row flex-wrap\">\n          <div>\n          <BeachInfo\n              Pico={Pico} />\n          </div>\n        </div>\n      </Content>\n    );\n  }\n}\n\nexport default Forecast;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from './components/layout/Sidebar';\nimport Navbar from './components/layout/Navbar';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Forecast from './components/Forecast/Forecast';\n\n\n\nconst Content = styled.div`\nwidth: 100%; // make sure the parent is full screen \nheight: 100%; // so that the content will center correctly\n\n  padding: 20px;\n  min-height: 100%;\n  transition: all 0.3s;\n  font-family: 'Raleway', sans-serif;\n  overflow:scroll;\n`;\n// test\n\nclass App extends Component {\n  \n  constructor(props) {\n  super(props);\n  this.state = {\n    Spot_Name: 'Cabo Frio',\n    Beach_Name: 'Praia do Foguete',\n     \n  };}\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <div className=\"wrapper\">\n            <Sidebar />\n            <Content>\n            \n              <Navbar Spot_Name={this.state.Spot_Name} />\n                          <Switch>\n                    <Forecast\n                    />\n              </Switch>\n            </Content>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}